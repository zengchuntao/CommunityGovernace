/*

Copyright 2018 Intel Corporation

This software and the related documents are Intel copyrighted materials,
and your use of them is governed by the express license under which they
were provided to you (License). Unless the License provides otherwise,
you may not use, modify, copy, publish, distribute, disclose or transmit
this software or the related documents without Intel's prior written
permission.

This software and the related documents are provided as is, with no
express or implied warranties, other than those that are expressly stated
in the License.

*/

#ifndef _WIN32
#include "config.h"
#endif

enclave {
	include "sgx_trts.h"
	include "sgx_utils.h"
	include "sgx_tkey_exchange.h"
	from "sgx_tkey_exchange.edl" import *;

	struct sp_msg_ds{
		[size=src_len] uint8_t* cipher_text;
		int src_len;
		uint8_t iv[16];
		int ctr_inc_bits;
		uint8_t cmac_buffer[16];
	};

	struct sp_msg_server{
		sgx_ra_context_t ctx;
		int src_len;
		uint8_t iv[16];
		int ctr_inc_bits;
		uint8_t cmac_buffer[16];
		[size=src_len] uint8_t* cipher_text;
	};

	struct info{
		int person_id;

	};



	trusted {
#ifndef _WIN32
		include "config.h"
#endif

		public sgx_status_t get_report([out] sgx_report_t *report,
			[in] sgx_target_info_t *target_info);

#ifdef _WIN32
		public size_t get_pse_manifest_size();

		public sgx_status_t get_pse_manifest([out, count=sz] char *buf, size_t sz);
#endif

		public sgx_status_t enclave_ra_init(sgx_ec256_public_t key, int b_pse,
			[out] sgx_ra_context_t *ctx, [out] sgx_status_t *pse_status);

		public sgx_status_t enclave_ra_init_def(int b_pse,
			[out] sgx_ra_context_t *ctx, [out] sgx_status_t *pse_status);

		public sgx_status_t enclave_ra_get_key_hash(
			[out] sgx_status_t *get_keys_status, sgx_ra_context_t ctx,
			sgx_ra_key_type_t type, [out] sgx_sha256_hash_t *hash);

		public sgx_status_t enclave_ra_close(sgx_ra_context_t ctx);


		public sgx_status_t enclave_ra_data_multi_party(
			[out] sgx_status_t* get_keys_ret, 
			[in, count=sp_msg_count] struct sp_msg_server* sp_msgs, 
			int sp_msg_count, 
			[out] int* sum);

		public sgx_status_t enclave_ra_data_test([out] sgx_status_t* get_keys_ret,
														sgx_ra_context_t ctx,
														[in]struct sp_msg_ds* msg,
														sgx_ra_context_t ctx_other,
														[in]struct sp_msg_ds* msg_other,
														[out] int* ave_value);

		public sgx_status_t enclave_ra_test(
											[out] sgx_status_t* get_keys_ret,
											[out] int* ave_value,
											sgx_ra_context_t ctx,
											[in, size=src_len] uint8_t* cipher_text, 
											int src_len,
											[in] uint8_t iv[16],
											int ctr_inc_bits,
											[in] uint8_t cmac_buffer[16] );


	};

	untrusted {
#ifndef _WIN32
		include "config.h"
#endif
	void ocall_print_string([in, string] const char *str);
	};
};


